"""
Django settings for crud_admin project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('CD_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('CD_DEBUG')

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crud_app',
    'rest_framework',
    'corsheaders',
    'import_export',
    'silk'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'silk.middleware.SilkyMiddleware'
]

ROOT_URLCONF = 'crud_admin.urls'

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
CSRF_TRUSTED_ORIGINS = ['https://*.evoluxar.com','https://*.127.0.0.1']

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'crud_admin.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': env('CD_DATABASE_ENGINE'),
        'NAME': env('CD_DATABASE_NAME'),
        'USER': env('CD_DATABASE_USER'),
        'PASSWORD': env('CD_DATABASE_PASSWORD'),
        'HOST': env('CD_DATABASE_HOST'),
        'PORT': env('CD_DATABASE_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = (
    'http://127.0.0.1:3000',
)

AWS_ACCESS_KEY_ID = env('CD_AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = env('CD_AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = env('CD_AWS_STORAGE_BUCKET_NAME')
AWS_S3_CUSTOM_DOMAIN = f"{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com"
AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}

AWS_S3_REGION_NAME = env('CD_AWS_S3_REGION_NAME')
AWS_S3_SIGNATURE_VERSION = env('CD_AWS_S3_SIGNATURE_VERSION')

STORAGES = {
    "default": {
        "BACKEND": "storages.backends.s3boto3.S3Boto3Storage"
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage"
    }
}


AWS_LOCATION = 'media'
STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/static/'
MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_LOCATION}/'

CD_SERVICES_SERVER_URL=env("CD_SERVICES_SERVER_URL")
CD_SSO_SERVER_URL=env("CD_SSO_SERVER_URL")

CD_ELASTIC_USER = env("CD_ELASTIC_USER")
CD_ELASTIC_SECRET = env("CD_ELASTIC_SECRET")
CD_CRUD_SERVER_URL = env("CD_CRUD_SERVER_URL")
CD_DYNAMIC_SERVICES_SERVER_URL = env("CD_DYNAMIC_SERVICES_SERVER_URL")
CD_ELASTIC_HOST = env("CD_ELASTIC_HOST")
CD_ELASTIC_PORT = env("CD_ELASTIC_PORT")
SSO_ADMIN_USER_EMAIL = env("SSO_ADMIN_USER_EMAIL")
SSO_ADMIN_USER_PASSWORD = env("SSO_ADMIN_USER_PASSWORD")

CD_DYNAMIC_SERVICES_BRANCH = env("CD_DYNAMIC_SERVICES_BRANCH")

TEMP_FOLDER_PATH = env("TEMP_FOLDER_PATH")
TEMP_DYNAMIC_FOLDER_PATH = env("TEMP_DYNAMIC_FOLDER_PATH")